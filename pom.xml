<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.fp024.struts2.study</groupId>
  <artifactId>struts2-study</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  
  <name>${project.artifactId} - Struts 2 Study Maven Parent</name>
  <url>https://github.com/fp024/struts2-study/struts2-study-parent</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>17</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <!-- Servlet 버전 -->
    <javax.servlet-api.version>4.0.1</javax.servlet-api.version>
    <javax.servlet.jsp-api.version>2.3.3</javax.servlet.jsp-api.version>
    
    
    <struts2.version>6.3.0.2</struts2.version>
    <spring.platformVersion>5.3.31</spring.platformVersion>
    
    <struts2-junit5-user-custom-plugin.version>${project.version}</struts2-junit5-user-custom-plugin.version>
    
    
    <log4j2.version>2.22.1</log4j2.version>
    
    <jackson.version>2.16.1</jackson.version>
    <jackson-databind.version>${jackson.version}</jackson-databind.version>
    <!-- 
      Struts에서 Jackson Databind를 따로 프로퍼티를 땃는지 이해가 안갔는데, 
      jackson-databind 만 마이크로 보안패치가 잦은 편이여서, 따로 딴 것 같다.
    -->
    <flexjson.version>3.3</flexjson.version>

    <hikaricp.version>5.1.0</hikaricp.version>
    <hibernate.version>5.6.15.Final</hibernate.version>
    <hsqldb.version>2.7.2</hsqldb.version>

    <javax.annotation-api.version>1.3.2</javax.annotation-api.version>

    <jasperreports.version>6.21.0</jasperreports.version>

    <lombok.version>1.18.30</lombok.version>

    <junit.version>5.10.1</junit.version>
    <mockito.version>5.8.0</mockito.version>
    <hamcrest.version>2.2</hamcrest.version>
    <assertj.version>3.25.1</assertj.version>

    <!-- struts2-convention-plugin에서 Java 17 바이트 코드 해석을 못해서, 버전을 올렸다. -->
    <asm.version>9.6</asm.version>


    <jetty.version>12.0.5</jetty.version>
    <jetty-plugin-group-id>org.eclipse.jetty.ee8</jetty-plugin-group-id>
    <jetty-plugin-artifact-id>jetty-ee8-maven-plugin</jetty-plugin-artifact-id>
    
    <jetty-root-jstl-group-id>org.eclipse.jetty.ee8</jetty-root-jstl-group-id>
    <jetty-root-jstl-artifact-id>jetty-ee8-glassfish-jstl</jetty-root-jstl-artifact-id>
    
    <jetty-exclude-jstl-group-id>org.glassfish.web</jetty-exclude-jstl-group-id>
    <jetty-exclude-jstl-artifact-id>javax.servlet.jsp.jstl</jetty-exclude-jstl-artifact-id>
    <!-- https://mvnrepository.com/artifact/org.glassfish.web/javax.servlet.jsp.jstl -->
    <jetty-exclude-jstl-version>1.2.5</jetty-exclude-jstl-version>


    <jetty10.version>10.0.19</jetty10.version>
    <jetty10-plugin-group-id>org.eclipse.jetty</jetty10-plugin-group-id>
    <jetty10-plugin-artifact-id>jetty-maven-plugin</jetty10-plugin-artifact-id>
    
    <jetty10-root-jstl-group-id>org.eclipse.jetty</jetty10-root-jstl-group-id>
    <jetty10-root-jstl-artifact-id>apache-jstl</jetty10-root-jstl-artifact-id>
    
    <jetty10-exclude-jstl-group-id>org.apache.taglibs</jetty10-exclude-jstl-group-id>
    <jetty10-exclude-jstl-artifact-id>taglibs-standard-impl</jetty10-exclude-jstl-artifact-id>
    <jetty10-exclude-jstl-version>1.2.5</jetty10-exclude-jstl-version>
    

    <!-- <jettyContextPath>/${project.build.finalName}</jettyContextPath>-->
    <!-- 예제 프로젝트로서 개별 실행하므로 경로를 ContextPath로 나눌 필요는 없다. -->
    <jettyContextPath>/</jettyContextPath>

    <!-- Jetty 리로딩 기본 설정은 -1로 리로딩하지 않음으로 둔다. -->
    <!-- 그런데, 이 프로젝트는 아니고, 다른 스프링 프로젝트에서.. XML 기반 설정은 문제가 없는데, Java Config 기반 설정으로 하면 문제가 여전히 있다. -->
    <jettyAutoDeploy>-1</jettyAutoDeploy>

    <!-- Maven Plugin 버전 -->
    <maven-clean-plugin.version>3.3.2</maven-clean-plugin.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
    <maven-compiler-plugin.version>3.12.1</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>
    <maven-failsafe-plugin.version>3.2.5</maven-failsafe-plugin.version>
    <maven-war-plugin.version>3.4.0</maven-war-plugin.version>
    <maven-install-plugin.version>3.1.1</maven-install-plugin.version>
    <maven-deploy-plugin.version>3.1.1</maven-deploy-plugin.version>
    <maven-toolchains-plugin.version>3.1.0</maven-toolchains-plugin.version>
    
    <!-- Struts JUnit Plugin -->
    <commons-compress.version>1.25.0</commons-compress.version>
    <portlet-api.version>3.0.1</portlet-api.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-framework-bom</artifactId>
        <version>${spring.platformVersion}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.struts</groupId>
        <artifactId>struts2-bom</artifactId>
        <version>${struts2.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-bom</artifactId>
        <version>${log4j2.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Struts 2 -->
    <dependency>
      <groupId>org.apache.struts</groupId>
      <artifactId>struts2-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
    </dependency>
    <!-- Apache Log4j SLF4J Binding  -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j2-impl</artifactId>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId> 
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId> 
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId> 
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-failsafe-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven-war-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-toolchains-plugin</artifactId>
        <version>${maven-toolchains-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>toolchain</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <toolchains>
            <jdk>
              <version>${maven.compiler.target}</version>
            </jdk>
          </toolchains>
        </configuration>
      </plugin>
      
      <!-- 
        java.lang.reflect.InaccessibleObjectException: 
        Unable to make field private static final java.util.concurrent.ConcurrentMap 
        java.util.ResourceBundle.cacheList accessible: 
        module java.base does not "opens java.util" to unnamed module 관련 처리
      -->      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>        
        <configuration>
          <argLine>
            --add-opens=java.base/java.util=ALL-UNNAMED
          </argLine>
        </configuration>        
      </plugin>      
    </plugins>
  </build>
  
  <modules>
    <!-- Junit 5 커스텀 플러그인 -->
    <module>plugins/struts2-junit5-user-custom-plugin</module>

    <!-- 예제 프로젝트의 부모 pom : 로컬 레파지토리 설치는 struts2-study와 struts2-junit5-user-custom-plugin 만 설치하면 되므로 아래는 포함하지 말자.. -->
    <!-- <module>struts2-study-parent</module> -->
  </modules>
</project>
