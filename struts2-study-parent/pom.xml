<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.fp024.struts2.study</groupId>
  <artifactId>struts2-study-parent</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>${project.artifactId} - Struts 2 Study Maven Parent</name>
  <url>https://github.com/fp024/struts2-study/struts2-study-parent</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>17</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <struts2.version>2.5.30</struts2.version>
    <spring.platformVersion>5.3.18</spring.platformVersion>
    
    <log4j2.version>2.17.2</log4j2.version>
    
    <jackson.version>2.13.2</jackson.version>
    <jackson-databind.version>2.13.2.2</jackson-databind.version>
    <!-- 
      Struts에서 Jackson Databind를 따로 프로퍼티를 땃는지 이해가 안갔는데, 
      jackson-databind 만 마이크로 보안패치가 잦은 편이여서, 따로 딴 것 같다.
    -->
    <flexjson.version>3.3</flexjson.version>

    <hikaricp.version>5.0.1</hikaricp.version>
    <hibernate.version>5.6.7.Final</hibernate.version>
    <hsqldb.version>2.6.1</hsqldb.version>

    <guava.version>31.1-jre</guava.version>

    <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
    
    <jasperreports.version>6.19.0</jasperreports.version>

    <lombok.version>1.18.22</lombok.version>

    <junit.version>5.8.2</junit.version>
    <mockito.version>4.4.0</mockito.version>
    <hamcrest.version>2.2</hamcrest.version>

    <!-- struts2-convention-plugin에서 Java 17 바이트 코드 해석을 못해서, 버전을 올렸다. -->
    <asm.version>9.2</asm.version>

    <jetty.version>10.0.8</jetty.version>
    <jettyContextPath>/${project.build.finalName}</jettyContextPath>
    
    <!-- 현시점 환경에서 다시 시도해봤을 때, Jetty 리로딩에 문제가 없어서 Enter를 누르면 재시작 되도록 0으로 설정을 바꾸었다. -->
    <jettyAutoDeploy>0</jettyAutoDeploy>
  </properties>

  <!-- module에도 상대경로 접근 방식으로 접근할 수 있다.-->
  <modules>
    <!-- 1. Struts 2 웹 어플리케이션을 만드는 방법 -->
    <module>../how-to-create-a-struts-2-web-application/basic-struts</module>
    <!-- 2. Struts 2를 사용한 Hello World -->
    <module>../hello-world-using-struts-2/helloworld-struts</module>
    <!-- 3. 태그 사용하기 -->
    <module>../using-tags/using-tags-struts</module>
    <!-- 4. 액션 코딩하기 -->
    <module>../coding-actions/coding-actions-struts</module>
    <!-- 5. 폼 처리 -->
    <module>../processing-forms/processing-forms-struts</module>
    <!-- 6. 폼 유효성 검사 -->
    <module>../form-validation/form-validation-struts</module>
    <!-- 7. 메시지 리소스 파일 -->
    <module>../message-resource-files/message-resource-struts</module>
    <!-- 8. 예외 처리 -->
    <module>../exception-handling/exception-handling-struts</module>
    <!-- 9. Struts 디버깅 -->
    <module>../debugging-struts/debugging-struts</module>
    <!-- 10. 폼 테그 -->
    <module>../form-tags/form-tags-struts</module>
    <!-- 11. XML을 사용하여 폼 검증 -->
    <module>../form-validation-using-xml/form-xml-validation-struts</module>
    <!-- 12. 제어 테그 -->
    <module>../control-tags/control-tags-struts</module>
    <!-- 13. 와일드카드 메서드 선택 -->
    <module>../wildcard-method-selection/wildcard-method-selection-struts</module>
    <!-- 14. 테마 -->
    <module>../themes/themes-struts</module>
    <!-- 15. 스프링과 Struts 2 -->
    <module>../spring-and-struts-2/spring-struts</module>
    <!-- 16. 어노테이션 -->
    <module>../annotations/annotations-struts</module>
    <!-- 17. 인터셉터 입문 -->
    <module>../introducing-interceptors/interceptors-struts</module>
    <!-- 18. 단위 테스트 -->
    <module>../unit-testing/unit-testing-struts</module>
    <!-- 19. HTTP 세션 -->
    <module>../http-session/http-session-struts</module>
    <!-- 20. Preparable 인터페이스 -->
    <module>../preparable-interface/preparable-interface-struts</module>
    <!-- 21. 파라미터 제외 -->
    <module>../exclude-parameters/exclude-parameters-struts</module>
    <!-- 22. JasperReports 튜토리얼 -->
    <module>../jasper-reports-tutorial/jasper-reports-struts</module>
    <!-- 23. JSON 튜토리얼 - FlexJSON 예제 -->
    <module>../json/json-customize-flexjson-struts</module>
    <!-- 24. JSON 튜토리얼 - Jackson 예제 -->
    <module>../json/json-customize-jackson-struts</module>
    <!-- 25. JSON 튜토리얼 - Struts 2 JSON Plugin 예제 -->
    <module>../json/json-struts</module>
    <!-- 26. 이중 평가 테스트 ( AliasInterceptor ) -->
    <module>../struts-double-evaluation-test</module>

  </modules>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.apache.struts</groupId>
        <artifactId>struts2-bom</artifactId>
        <version>${struts2.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-bom</artifactId>
        <version>${log4j2.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Struts 2 -->
    <dependency>
      <groupId>org.apache.struts</groupId>
      <artifactId>struts2-core</artifactId>
    </dependency>

    <!-- Apache Log4j SLF4J Binding  -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Servlet -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>4.0.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>javax.servlet.jsp-api</artifactId>
      <version>2.3.3</version>
      <scope>provided</scope>
    </dependency>

    <!-- jetty가 사용하는 apache-jstl에 디펜던시된 taglibs-standard-impl이 Tomcat 8.5에서도 잘 동작한다. -->
    <dependency>
      <groupId>org.apache.taglibs</groupId>
      <artifactId>taglibs-standard-impl</artifactId>
      <version>1.2.5</version>
      <scope>runtime</scope>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId> 
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId> 
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId> 
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.10.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.22.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.3.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.apache.maven.plugins
                    </groupId>
                    <artifactId>
                      maven-toolchains-plugin
                    </artifactId>
                    <versionRange>
                      [3.0.0,)
                    </versionRange>
                    <goals>
                      <goal>toolchain</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore> <!-- toolchain 동작 eclipse m2e에서 무시 처리 -->
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-toolchains-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <goals>
              <goal>toolchain</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <toolchains>
            <jdk>
              <version>${maven.compiler.target}</version>
            </jdk>
          </toolchains>
        </configuration>
      </plugin>
      
      <!-- 
        java.lang.reflect.InaccessibleObjectException: 
        Unable to make field private static final java.util.concurrent.ConcurrentMap 
        java.util.ResourceBundle.cacheList accessible: 
        module java.base does not "opens java.util" to unnamed module 관련 처리
      -->      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>        
        <configuration>
          <argLine>
            --add-opens=java.base/java.util=ALL-UNNAMED
          </argLine>
        </configuration>        
      </plugin>

      <plugin>
        <!-- https://www.eclipse.org/jetty/documentation/jetty-10/programming-guide/index.html#jetty-maven-plugin -->
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>${jetty.version}</version>
        <configuration>
          <!-- jetty가 forked 모드로 실행될 때만 의미가 있는 것 같다. 일단 설정은 남겨두자. -->
          <jvmArgs>
            --add-opens java.base/java.util=ALL-UNNAMED
          </jvmArgs>
          <webApp>
            <contextPath>${jettyContextPath}</contextPath>
            <sessionHandler>
              <sessionIdPathParameterName>none</sessionIdPathParameterName>
            </sessionHandler>
          </webApp>
          <deployMode>EMBED</deployMode>
          <stopKey>CTRL+C</stopKey>
          <stopPort>8999</stopPort>
          <!--
              Spring 에서만 Jetty의 자동반영-재시작이 실패하는 줄 알았더니...
              Struts 2도 StrutsPrepareAndExecuteFilter을 정상적으로 못 읽어와서 Jetty의 자동반영-재시작이 실패한다.
              오류 패턴이 Spring에서 봤던것과 같다. (Spring은 ContextLoaderListener 를 정상적으로 못 읽음)
              -1로 설정하여 이 기능을 꺼놓도록 하자!
          -->
          <scan>${jettyAutoDeploy}</scan>
          <scanTargetPatterns>
            <scanTargetPattern>
              <directory>src/main/webapp/WEB-INF</directory>
              <includes>
                <include>**/*.properties</include>
                <include>**/*.xml</include>
              </includes>
              <excludes>
                <exclude>**/*.jsp</exclude>
              </excludes>
            </scanTargetPattern>
          </scanTargetPatterns>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>apache-jstl</artifactId>
            <version>${jetty.version}</version>
            <exclusions>
              <exclusion>
                <groupId>org.apache.taglibs</groupId>
                <artifactId>taglibs-standard-impl</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
</project>
