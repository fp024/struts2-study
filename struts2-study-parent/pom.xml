<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.fp024.struts2.study</groupId>
    <artifactId>struts2-study</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <relativePath>../</relativePath>
  </parent>

  <artifactId>struts2-study-parent</artifactId>
  <packaging>pom</packaging>

  <!-- module에도 상대경로 접근 방식으로 접근할 수 있다.-->
  <modules>
    <!-- 1. Struts 2 웹 어플리케이션을 만드는 방법 -->
    <module>../how-to-create-a-struts-2-web-application/basic-struts</module>
    <!-- 2. Struts 2를 사용한 Hello World -->
    <module>../hello-world-using-struts-2/helloworld-struts</module>
    <!-- 3. 태그 사용하기 -->
    <module>../using-tags/using-tags-struts</module>
    <!-- 4. 액션 코딩하기 -->
    <module>../coding-actions/coding-actions-struts</module>
    <!-- 5. 폼 처리 -->
    <module>../processing-forms/processing-forms-struts</module>
    <!-- 6. 폼 유효성 검사 -->
    <module>../form-validation/form-validation-struts</module>
    <!-- 7. 메시지 리소스 파일 -->
    <module>../message-resource-files/message-resource-struts</module>
    <!-- 8. 예외 처리 -->
    <module>../exception-handling/exception-handling-struts</module>
    <!-- 9. Struts 디버깅 -->
    <module>../debugging-struts/debugging-struts</module>
    <!-- 10. 폼 테그 -->
    <module>../form-tags/form-tags-struts</module>
    <!-- 11. XML을 사용하여 폼 검증 -->
    <module>../form-validation-using-xml/form-xml-validation-struts</module>
    <!-- 12. 제어 테그 -->
    <module>../control-tags/control-tags-struts</module>
    <!-- 13. 와일드카드 메서드 선택 -->
    <module>../wildcard-method-selection/wildcard-method-selection-struts</module>
    <!-- 14. 테마 -->
    <module>../themes/themes-struts</module>
    <!-- 15. 스프링과 Struts 2 -->
    <module>../spring-and-struts-2/spring-struts</module>
    <!-- 16. 어노테이션 -->
    <module>../annotations/annotations-struts</module>
    <!-- 17. 인터셉터 입문 -->
    <module>../introducing-interceptors/interceptors-struts</module>
    <!-- 18. 단위 테스트 -->
    <module>../unit-testing/unit-testing-struts</module>
    <!-- 19. HTTP 세션 -->
    <module>../http-session/http-session-struts</module>
    <!-- 20. Preparable 인터페이스 -->
    <module>../preparable-interface/preparable-interface-struts</module>
    <!-- 21. 파라미터 제외 -->
    <module>../exclude-parameters/exclude-parameters-struts</module>
    <!-- 22. JasperReports 튜토리얼 : JasperReports 컴파일을 Spring Component Bean으로 처리-->
    <module>../jasper-reports-tutorial/jasper-reports-struts</module>
    <!-- 23. JasperReports 튜토리얼 : JasperReports 컴파일을 Struts 인터셉터로 처리 -->
    <module>../jasper-reports-tutorial/jasper-reports-with-interceptor</module>
    <!-- 24. JasperReports 튜토리얼 : JasperReports 컴파일을 Servlet의 ContextListener로 처리 -->
    <module>../jasper-reports-tutorial/jasper-reports-with-contextlistener</module>
    <!-- 25. JSON 튜토리얼 - FlexJSON 예제 -->
    <module>../json/json-customize-flexjson-struts</module>
    <!-- 26. JSON 튜토리얼 - Jackson 예제 -->
    <module>../json/json-customize-jackson-struts</module>
    <!-- 27. JSON 튜토리얼 - Struts 2 JSON Plugin 예제 -->
    <module>../json/json-struts</module>
    <!-- 28. 이중 평가 테스트 ( AliasInterceptor ) -->
    <module>../struts-double-evaluation-test</module>
  </modules>


  <dependencies>
    <!-- Servlet -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>${javax.servlet-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>javax.servlet.jsp-api</artifactId>
      <version>${javax.servlet.jsp-api.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- jetty가 사용하는 jetty-ee8-glassfish-jstl에 디펜던시된 tjavax.servlet.jsp.jstl은 Tomcat 9.0에서도 잘 동작한다. -->
    <dependency>
      <groupId>org.glassfish.web</groupId>
      <artifactId>javax.servlet.jsp.jstl</artifactId>
      <version>${javax.servlet.jsp.jstl.version}</version>
      <scope>runtime</scope>
    </dependency>
    
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>    
    <plugins>
      <plugin>
        <!-- https://www.eclipse.org/jetty/documentation/jetty-10/programming-guide/index.html#jetty-maven-plugin -->
        <groupId>org.eclipse.jetty.ee8</groupId>
        <artifactId>jetty-ee8-maven-plugin</artifactId>
        <version>${jetty.version}</version>
        <configuration>
          <!-- jetty가 forked 모드로 실행될 때만 의미가 있는 것 같다. 일단 설정은 남겨두자. -->
          <jvmArgs>
            --add-opens java.base/java.util=ALL-UNNAMED
          </jvmArgs>
          <webApp>
            <contextPath>${jettyContextPath}</contextPath>
            <sessionHandler>
              <sessionIdPathParameterName>none</sessionIdPathParameterName>
            </sessionHandler>
          </webApp>
          <deployMode>EMBED</deployMode>
          <stopKey>CTRL+C</stopKey>
          <stopPort>8999</stopPort>
          <!--
              Spring 에서만 Jetty의 자동반영-재시작이 실패하는 줄 알았더니...
              Struts 2도 StrutsPrepareAndExecuteFilter을 정상적으로 못 읽어와서 Jetty의 자동반영-재시작이 실패한다.
              오류 패턴이 Spring에서 봤던것과 같다. (Spring은 ContextLoaderListener 를 정상적으로 못 읽음)
              -1로 설정하여 이 기능을 꺼놓도록 하자!
          -->
          <scan>${jettyAutoDeploy}</scan>
          <scanTargetPatterns>
            <scanTargetPattern>
              <directory>src/main/webapp/WEB-INF</directory>
              <includes>
                <include>**/*.properties</include>
                <include>**/*.xml</include>
              </includes>
              <excludes>
                <exclude>**/*.jsp</exclude>
              </excludes>
            </scanTargetPattern>
          </scanTargetPatterns>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.eclipse.jetty.ee8</groupId>
            <artifactId>jetty-ee8-glassfish-jstl</artifactId>
            <version>${jetty.version}</version>
            <exclusions>
              <exclusion>
                <groupId>org.glassfish.web</groupId>
                <artifactId>javax.servlet.jsp.jstl</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
</project>
